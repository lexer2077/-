import random
import time

def ruletka():
    global bank_d
    global bank_p
    def rulet(bet, collor):
        time.sleep(0.5)
        z = random.randint(0, 36)
        global bank_d
        global bank_p
        if z == 0:
            print(f'–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ: {z} green')
            if collor == 'g':
                bank_p += bet * 14
                bank_d -= bet * 14
                print(f'–í—ã –≤—ã–π–≥—Ä–∞–ª–∏: {bet * 14}$')
            else:
                bank_d += bet
                print(f'–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏: {bet}$')
        elif z % 2 == 0:
            print(f'–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ: {z} black')
            if collor == 'b':
                bank_p += bet * 2
                bank_d -= bet * 2
                print(f'–í—ã –≤—ã–π–≥—Ä–∞–ª–∏: {bet * 2}$')
            else:
                bank_d += bet
                print(f'–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏: {bet}$')
        elif z % 2 != 0:
            print(f'–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ: {z} red')
            if collor == 'r':
                bank_p += bet * 2
                bank_d -= bet * 2
                print(f'–í—ã –≤—ã–π–≥—Ä–∞–ª–∏: {bet * 2}$')
            else:
                bank_d += bet
                print(f'–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏: {bet}$')
    print('–≠—Ç–æ —É–ø—Ä–æ—â—ë–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Ä—É–ª–µ—Ç–∫–∏, –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞ –ø–∏—à–∏—Ç–µ "r"-red, "g"-green, "b"-black')
    print('–í–∞—à–∞ —Ü–µ–ª—å –æ–±–∞–Ω–∫—Ä–æ—Ç–∏—Ç—å –∫–∞–∑–∏–Ω–æ)')
    c = 'rgb'
    while True:
        print('__________________________')
        if bank_p > bank_all:
            print(f'–í–∞—à —Å—á—ë—Ç —Ä–∞–≤–µ–Ω: {bank_all}$')
        if bank_p <= bank_all:
            print(f'–í–∞—à —Å—á—ë—Ç —Ä–∞–≤–µ–Ω: {bank_p}$')
        print(f'–°—á—ë—Ç –∫–∞–∑–∏–Ω–æ: {bank_d}$')
        if bank_p == 0:
            print('–£–≤—ã –≤—ã —Å—Ç–∞–ª–∏ –±–æ–º–∂–æ–º. –ü—Ä–æ—á—å –∏–∑ –∫–∞–∑–∏–∫–∞!')
            break
        if bank_d <= 0:
            print('–í—ã –æ–±–∞–Ω–∫—Ä–æ—Ç–∏–ª–∏ –∫–∞–∑–∏–Ω–æ!')
            break
        while True:
            bet = float(input('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Å—Ç–∞–≤–∫—É:'))
            collor = input('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ü–≤–µ—Ç:')
            if collor not in c or float(bet) > bank_p or float(bet) > bank_d:
                print('–û—à–∏–±–∫–∞! —Ä–µ—Å–ø–∏–Ω')
            else:
                bank_p -= bet
                rulet(bet, collor)
                break

def miner():
    global bank_d
    global bank_p
    kef = {25: 1, 24: 1.01, 23: 1.02, 22: 1.04, 21: 1.08, 20: 1.16,
        19: 1.32, 18: 1.64, 17: 1.86, 16: 2, 15: 2.16, 14: 2.32,
        13: 2.64, 12: 3, 11: 3.32, 10: 3.86, 9: 4, 8: 4.64,
        7: 5, 6: 5.64, 5: 6, 4: 6.86, 3: 8, 2: 10, 1: 30
        }
    min_pole = [[[], [], [], [], []],
                [[], [], [], [], []],
                [[], [], [], [], []],
                [[], [], [], [], []],
                [[], [], [], [], []]]
    min_pole1 = [[['‚¨õ'], ['‚¨õ'], ['‚¨õ'], ['‚¨õ'], ['‚¨õ']],
                [['‚¨õ'], ['‚¨õ'], ['‚¨õ'], ['‚¨õ'], ['‚¨õ']],
                [['‚¨õ'], ['‚¨õ'], ['‚¨õ'], ['‚¨õ'], ['‚¨õ']],
                [['‚¨õ'], ['‚¨õ'], ['‚¨õ'], ['‚¨õ'], ['‚¨õ']],
                [['‚¨õ'], ['‚¨õ'], ['‚¨õ'], ['‚¨õ'], ['‚¨õ']]]
    while True:
        bomb = int(input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ –±–æ–º–±:'))
        if 0 < bomb < 25:
            break
        else:
            print('–û—à–∏–±–∫–∞! –±–æ–º–± –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç 1 –¥–æ 24')
    b = bomb
    while True:
        bet = float(input('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Å—Ç–∞–≤–∫—É:'))
        if bet > bank_p:
            print('–£ –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥')
        else:
            break
    while True:
        if bomb == 0:
            break
        c = random.randint(0, 4)
        v = random.randint(0, 4)
        if len(min_pole[c][v]) == 0:
            min_pole[c][v] += 'üí£'
            bomb -= 1
    for z in range(len(min_pole)):
        for x in range(len(min_pole[z])):
            if len(min_pole[z][x]) == 0:
                min_pole[z][x] += 'üíé'
    cristal = 0
    fl = 0
    while True:
        if fl == 1:
            break
        for z in range(len(min_pole)):
            for x in range(len(min_pole[z])):
                if 'üíé' in min_pole[z][x]:
                    cristal += 1
        fl = 1
    c = 0
    while True:
        for z in range(len(min_pole1)):
            for x in range(len(min_pole1[z])):
                print(*min_pole1[z][x], end='')
            print()
        for z in range(len(min_pole1)):
            if c == 1:
                break
            for x in range(len(min_pole1[z])):
                if 'üí£' in min_pole1[z][x]:
                    print(f'–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏: {bet}')
                    bank_d += bet
                    min_pole[z][x] = 'üí•' # type: ignore
                    c = 1
                if c == 1:
                    break
        if c == 1:
            break
        brt = 0
        while True:
            print(f'–ñ–µ–ª–∞–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å: {bet * kef[cristal]}')
            gr = input('Y –∏–ª–∏ N:')
            if gr.lower() == 'y':
                bank_p += bet * kef[cristal]
                print(f'–í—ã –≤–π–≥—Ä–∞–ª–∏: {bet * kef[cristal]}')
                brt = 1
                break
            elif gr.lower() == 'n':
                break
        if brt == 1:
            break
        if cristal == 0:
            print('–í—ã —Ä–∞–∑–º–∏–Ω–∏—Ä–æ–≤–∞–ª–∏ –≤—Å—ë –ø–æ–ª–µ!')
            bank_p += bet * kef[cristal]
            print(f'–í—ã –≤–π–≥—Ä–∞–ª–∏: {bet * kef[cristal]}')
        print(f'–ö–æ—ç—Ñ —Ä–∞–≤–µ–Ω: {kef[cristal]}x')
        while True:
            y = int(input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É "y":'))
            x = int(input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É "x":'))
            if '‚¨õ' in min_pole1[y - 1][x - 1]:
                min_pole1[y - 1][x - 1] = min_pole[y - 1][x - 1]
                if 'üíé' in min_pole[y - 1][x - 1]:
                    cristal -= 1
                break
            elif '‚¨õ' not in min_pole1[y - 1][x - 1]:
                print('–î–∞–Ω–Ω–∞—è –∫–ª–µ—Ç–∫–∞ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–∞!')
    for z in range(len(min_pole)):
            for x in range(len(min_pole[z])):
                print(*min_pole[z][x], end='')
            print()
bank_p = float(input('–í—ã–±–µ—Ä–µ—Ç–µ —Å—É–º–º—É –¥–µ–Ω–µ–≥ –∏–≥—Ä–æ–∫–∞:'))
bank_d = float(input('–í—ã–±–µ—Ä–µ—Ç–µ —Å—É–º–º—É –¥–µ–Ω–µ–≥ –¥–∏–ª–ª–µ—Ä–∞:'))
bank_all = bank_p + bank_d
game = input()
if game.lower() == '—Ä—É–ª–µ—Ç–∫–∞':
    ruletka()
elif game.lower() == '–º–∏–Ω—ë—Ä':
    miner()
print(bank_p)